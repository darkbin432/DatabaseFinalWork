<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhtlwb.dbfinal.persistence.ExamDao">

    <insert id="insertInfo" parameterType="com.xhtlwb.dbfinal.model.Exam" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO exam (title, course_id, teacher_id, begin_time, end_time, created_time, updated_time, status, type)
        VALUES (#{title}, #{courseId}, #{teacherId}, now(), now(), now(), now(), 1, #{type})
    </insert>

    <update id="updateInfo" parameterType="com.xhtlwb.dbfinal.model.Exam">
        UPDATE exam
        SET
        <if test="title!=null">
            title = #{title},
        </if>
        <if test="courseId!=null">
            course_id = #{courseId},
        </if>
        <if test="teacherId!=null">
            teacher_id = #{teacherId},
        </if>
        <if test="beginTime!=null">
            begin_time = #{beginTime},
        </if>
        <if test="endTime!=null">
            end_time = #{endTime},
        </if>
        updated_time = now()
        where id = #{id};
    </update>


    <update id="deleteInfo" parameterType="int">
        UPDATE exam
        SET status = 0
        WHERE id = #{id};
    </update>

    <select id="getOne" parameterType="int" resultType="com.xhtlwb.dbfinal.model.Exam">
        SELECT *
        FROM exam
        WHERE id = #{id} AND status = 1
    </select>

    <select id="getAllExamByStudent" parameterType="com.xhtlwb.dbfinal.model.param.ExamParam"
            resultType="com.xhtlwb.dbfinal.model.Exam">
        SELECT *,
        (SELECT `user`.`name`
        FROM course LEFT JOIN `user` ON course.teacher_id = `user`.id LIMIT 1) AS teacher_name
        FROM exam LEFT JOIN user_exam_relationship ON exam.id = user_exam_relationship.exam_id
        <where>
            exam.status = 1
            AND user_exam_relationship.status = 1
            AND user_exam_relationship.user_id = #{userId}
            <if test="title!=null">
                AND exam.title LIKE "%"#{title}"%"
            </if>
            <if test="courseId!=null">
                AND exam.course_id = #{courseId}
            </if>
            <if test="teacherId!=null">
                AND exam.teacher_id = #{teacherId}
            </if>
            <if test="userId!=null">
                AND user_exam_relationship.user_id = #{userId}
            </if>
            <if test="type!=null">
                AND exam.type = #{type}
            </if>
        </where>
        ORDER BY exam.id DESC
        <if test="offset!=null and size!=null">
            LIMIT #{offset},#{size};
        </if>
    </select>

    <select id="getAllExamByTeacher" parameterType="com.xhtlwb.dbfinal.model.param.ExamParam"
            resultType="com.xhtlwb.dbfinal.model.Exam">
        SELECT *
        FROM exam LEFT JOIN course ON course.id = exam.course_id
        <where>
            exam.status = 1
            AND course.status = 1
            AND course.teacher_id = #{userId}
        </where>
        ORDER BY exam.id DESC
        <if test="offset!=null and size!=null">
            LIMIT #{offset},#{size};
        </if>
    </select>

    <insert id="insertExamProblemRelation" parameterType="hashmap">
        INSERT INTO exam_problem_relationship(problem_id, exam_id, created_time, updated_time, status)
        VALUES (#{problemId}, #{examId}, now(), now(), 1);
    </insert>
</mapper>