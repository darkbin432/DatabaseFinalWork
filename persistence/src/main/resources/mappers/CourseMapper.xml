<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhtlwb.dbfinal.persistence.CourseDao">

    <insert id="insertInfo" parameterType="com.xhtlwb.dbfinal.model.Course" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO course(title, description, teacher_id, created_time, updated_time, status)
        VALUES (#{title}, #{description}, #{teacherId}, now(), now(), 1);
    </insert>

    <update id="updateInfo" parameterType="com.xhtlwb.dbfinal.model.param.CourseParam">
        UPDATE course
        SET
        <if test="title!=null">
            title = #{title},
        </if>
        <if test="description!=null">
            description = #{description},
        </if>
        <if test="teacherId!=null">
            teacher_id = #{teacherId},
        </if>
        <if test="createdTime!=null">
            created_time = #{createdTime},
        </if>
        <if test="updatedTime!=null">
            updated_time = #{updatedTime}
        </if>
        updated_time = now()
        where id = #{id};
    </update>

    <update id="deleteInfo" parameterType="int">
        UPDATE course
        SET status = 0
        WHERE id = #{id}
    </update>

    <select id="getOne" parameterType="int" resultType="com.xhtlwb.dbfinal.model.Course">
        SELECT course.*, COUNT(exam.id) AS exam_count
        FROM course LEFT JOIN exam ON exam.course_id = course.id
        <where>
            course.status = 1
            AND exam.status = 1
            AND course.id = #{id}
        </where>
        LIMIT 1;
    </select>

    <select id="getAllCourseByStudent" parameterType="com.xhtlwb.dbfinal.model.param.CourseParam" resultType="com.xhtlwb.dbfinal.model.Course">
        SELECT course.*, u1.name AS teacher_name
        FROM course LEFT JOIN `user` AS u1 ON course.teacher_id = u1.id
        LEFT JOIN user_course_relationship AS u2 ON course.id = u2.course_id
        <where>
            course.status = 1
            AND u1.status = 1
            AND u1.type = 1
            AND u2.status = 1
            <if test="title!=null">
                AND course.title LIKE "%"#{title}"%"
            </if>
            <if test="id!=null">
                AND u2.user_id = #{id}
            </if>
        </where>
        ORDER BY course.id DESC
        <if test="offset!=null and size!=null">
            LIMIT #{offset},#{size};
        </if>
    </select>

    <select id="getAllCourseByTeacher" parameterType="com.xhtlwb.dbfinal.model.param.CourseParam" resultType="com.xhtlwb.dbfinal.model.Course">
        SELECT course.*, u1.name AS teacher_name
        FROM course LEFT JOIN `user` AS u1 ON course.teacher_id = u1.id
        <where>
            course.status = 1
            AND u1.status = 1
            <if test="teacherId!=null">
                AND course.teacher_id = #{teacherId}
            </if>
            <if test="title!=null">
                AND course.title LIKE "%"#{title}"%"
            </if>
        </where>
        ORDER BY course.id DESC
        <if test="offset!=null and size!=null">
            LIMIT #{offset},#{size};
        </if>
    </select>

    <insert id="insertUserCourseRelation" parameterType="hashmap">
        INSERT INTO user_course_relationship(user_id, course_id, created_time, updated_time, status)
        VALUES (#{userId}, #{courseId}, now(), now(), 1);
    </insert>
</mapper>